pipeline {
    agent {
        label 'AGENT-1'
    }

    options {
        // Timeout counter starts AFTER agent is allocated
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm') // when we apply this in middle need to restart jenkins 
        //retry(1)
    }

    parameters { 
        
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')

    }

    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                        'cd 00-vpc' 
                        'terraform init -reconfigure'  
                        'terraform plan -out=tfplan'  
                    """      
                }
        
            }
        }

        stage('Apply and Destroy') {
            input {
                message "Should we continue to ${params.ACTION}"
                ok "Yes, we should."
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh """
                        if [ ${params.ACTION} == 'apply' ] 
                        then
                           terraform apply -auto-approve tfplan
                        elif [ ${params.ACTION} == 'destroy' ]
                        then
                           terraform destroy -auto-approve 
                        fi          
                    """      
                }
        
            }
        }
        stage ('Trigger SG') {
            when {
                expression { ${params.ACTION} == 'apply' }
            }
            steps{
                build job: '10-sg', parameters: [string(name: 'ACTION', value: "apply")], wait: false
            }
        }

    }

    post { 
        always {
            echo 'this section runs always'
        }

        success {
            echo 'this section runs when pipe line success'
        }

        failure {
            echo 'this section runs when pipeline is failure'
        }
    }
}